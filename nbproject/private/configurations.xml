<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="CMakeFiles">
        <df name="2.8.12.2">
          <df name="CompilerIdC">
            <in>CMakeCCompilerId.c</in>
          </df>
          <df name="CompilerIdCXX">
            <in>CMakeCXXCompilerId.cpp</in>
          </df>
        </df>
        <df name="CMakeTmp">
        </df>
        <df name="jpointcloud.dir">
          <df name="src">
          </df>
        </df>
        <df name="Progress">
        </df>
      </df>
      <df name="images">
      </df>
      <df name="include">
        <df name="eigen3">
          <df name="Eigen">
            <df name="src">
              <df name="Cholesky">
                <in>LDLT.h</in>
                <in>LLT.h</in>
                <in>LLT_LAPACKE.h</in>
              </df>
              <df name="CholmodSupport">
                <in>CholmodSupport.h</in>
              </df>
              <df name="Core">
                <df name="arch">
                  <df name="AltiVec">
                    <in>Complex.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                  </df>
                  <df name="AVX">
                    <in>Complex.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                    <in>TypeCasting.h</in>
                  </df>
                  <df name="AVX512">
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                  </df>
                  <df name="CUDA">
                    <in>Complex.h</in>
                    <in>Half.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                    <in>PacketMathHalf.h</in>
                    <in>TypeCasting.h</in>
                  </df>
                  <df name="Default">
                    <in>Settings.h</in>
                  </df>
                  <df name="NEON">
                    <in>Complex.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                  </df>
                  <df name="SSE">
                    <in>Complex.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                    <in>TypeCasting.h</in>
                  </df>
                  <df name="ZVector">
                    <in>Complex.h</in>
                    <in>MathFunctions.h</in>
                    <in>PacketMath.h</in>
                  </df>
                </df>
                <df name="functors">
                  <in>AssignmentFunctors.h</in>
                  <in>BinaryFunctors.h</in>
                  <in>NullaryFunctors.h</in>
                  <in>StlFunctors.h</in>
                  <in>TernaryFunctors.h</in>
                  <in>UnaryFunctors.h</in>
                </df>
                <df name="products">
                  <in>GeneralBlockPanelKernel.h</in>
                  <in>GeneralMatrixMatrix.h</in>
                  <in>GeneralMatrixMatrixTriangular.h</in>
                  <in>GeneralMatrixMatrixTriangular_BLAS.h</in>
                  <in>GeneralMatrixMatrix_BLAS.h</in>
                  <in>GeneralMatrixVector.h</in>
                  <in>GeneralMatrixVector_BLAS.h</in>
                  <in>Parallelizer.h</in>
                  <in>SelfadjointMatrixMatrix.h</in>
                  <in>SelfadjointMatrixMatrix_BLAS.h</in>
                  <in>SelfadjointMatrixVector.h</in>
                  <in>SelfadjointMatrixVector_BLAS.h</in>
                  <in>SelfadjointProduct.h</in>
                  <in>SelfadjointRank2Update.h</in>
                  <in>TriangularMatrixMatrix.h</in>
                  <in>TriangularMatrixMatrix_BLAS.h</in>
                  <in>TriangularMatrixVector.h</in>
                  <in>TriangularMatrixVector_BLAS.h</in>
                  <in>TriangularSolverMatrix.h</in>
                  <in>TriangularSolverMatrix_BLAS.h</in>
                  <in>TriangularSolverVector.h</in>
                </df>
                <df name="util">
                  <in>BlasUtil.h</in>
                  <in>Constants.h</in>
                  <in>DisableStupidWarnings.h</in>
                  <in>ForwardDeclarations.h</in>
                  <in>MKL_support.h</in>
                  <in>Macros.h</in>
                  <in>Memory.h</in>
                  <in>Meta.h</in>
                  <in>NonMPL2.h</in>
                  <in>ReenableStupidWarnings.h</in>
                  <in>StaticAssert.h</in>
                  <in>XprHelper.h</in>
                </df>
                <in>Array.h</in>
                <in>ArrayBase.h</in>
                <in>ArrayWrapper.h</in>
                <in>Assign.h</in>
                <in>AssignEvaluator.h</in>
                <in>Assign_MKL.h</in>
                <in>BandMatrix.h</in>
                <in>Block.h</in>
                <in>BooleanRedux.h</in>
                <in>CommaInitializer.h</in>
                <in>ConditionEstimator.h</in>
                <in>CoreEvaluators.h</in>
                <in>CoreIterators.h</in>
                <in>CwiseBinaryOp.h</in>
                <in>CwiseNullaryOp.h</in>
                <in>CwiseTernaryOp.h</in>
                <in>CwiseUnaryOp.h</in>
                <in>CwiseUnaryView.h</in>
                <in>DenseBase.h</in>
                <in>DenseCoeffsBase.h</in>
                <in>DenseStorage.h</in>
                <in>Diagonal.h</in>
                <in>DiagonalMatrix.h</in>
                <in>DiagonalProduct.h</in>
                <in>Dot.h</in>
                <in>EigenBase.h</in>
                <in>ForceAlignedAccess.h</in>
                <in>Fuzzy.h</in>
                <in>GeneralProduct.h</in>
                <in>GenericPacketMath.h</in>
                <in>GlobalFunctions.h</in>
                <in>IO.h</in>
                <in>Inverse.h</in>
                <in>Map.h</in>
                <in>MapBase.h</in>
                <in>MathFunctions.h</in>
                <in>MathFunctionsImpl.h</in>
                <in>Matrix.h</in>
                <in>MatrixBase.h</in>
                <in>NestByValue.h</in>
                <in>NoAlias.h</in>
                <in>NumTraits.h</in>
                <in>PermutationMatrix.h</in>
                <in>PlainObjectBase.h</in>
                <in>Product.h</in>
                <in>ProductEvaluators.h</in>
                <in>Random.h</in>
                <in>Redux.h</in>
                <in>Ref.h</in>
                <in>Replicate.h</in>
                <in>ReturnByValue.h</in>
                <in>Reverse.h</in>
                <in>Select.h</in>
                <in>SelfAdjointView.h</in>
                <in>SelfCwiseBinaryOp.h</in>
                <in>Solve.h</in>
                <in>SolveTriangular.h</in>
                <in>SolverBase.h</in>
                <in>StableNorm.h</in>
                <in>Stride.h</in>
                <in>Swap.h</in>
                <in>Transpose.h</in>
                <in>Transpositions.h</in>
                <in>TriangularMatrix.h</in>
                <in>VectorBlock.h</in>
                <in>VectorwiseOp.h</in>
                <in>Visitor.h</in>
              </df>
              <df name="Eigenvalues">
                <in>ComplexEigenSolver.h</in>
                <in>ComplexSchur.h</in>
                <in>ComplexSchur_LAPACKE.h</in>
                <in>EigenSolver.h</in>
                <in>GeneralizedEigenSolver.h</in>
                <in>GeneralizedSelfAdjointEigenSolver.h</in>
                <in>HessenbergDecomposition.h</in>
                <in>MatrixBaseEigenvalues.h</in>
                <in>RealQZ.h</in>
                <in>RealSchur.h</in>
                <in>RealSchur_LAPACKE.h</in>
                <in>SelfAdjointEigenSolver.h</in>
                <in>SelfAdjointEigenSolver_LAPACKE.h</in>
                <in>Tridiagonalization.h</in>
              </df>
              <df name="Geometry">
                <df name="arch">
                  <in>Geometry_SSE.h</in>
                </df>
                <in>AlignedBox.h</in>
                <in>AngleAxis.h</in>
                <in>EulerAngles.h</in>
                <in>Homogeneous.h</in>
                <in>Hyperplane.h</in>
                <in>OrthoMethods.h</in>
                <in>ParametrizedLine.h</in>
                <in>Quaternion.h</in>
                <in>Rotation2D.h</in>
                <in>RotationBase.h</in>
                <in>Scaling.h</in>
                <in>Transform.h</in>
                <in>Translation.h</in>
                <in>Umeyama.h</in>
              </df>
              <df name="Householder">
                <in>BlockHouseholder.h</in>
                <in>Householder.h</in>
                <in>HouseholderSequence.h</in>
              </df>
              <df name="IterativeLinearSolvers">
                <in>BasicPreconditioners.h</in>
                <in>BiCGSTAB.h</in>
                <in>ConjugateGradient.h</in>
                <in>IncompleteCholesky.h</in>
                <in>IncompleteLUT.h</in>
                <in>IterativeSolverBase.h</in>
                <in>LeastSquareConjugateGradient.h</in>
                <in>SolveWithGuess.h</in>
              </df>
              <df name="Jacobi">
                <in>Jacobi.h</in>
              </df>
              <df name="LU">
                <df name="arch">
                  <in>Inverse_SSE.h</in>
                </df>
                <in>Determinant.h</in>
                <in>FullPivLU.h</in>
                <in>InverseImpl.h</in>
                <in>PartialPivLU.h</in>
                <in>PartialPivLU_LAPACKE.h</in>
              </df>
              <df name="MetisSupport">
                <in>MetisSupport.h</in>
              </df>
              <df name="misc">
                <in>Image.h</in>
                <in>Kernel.h</in>
                <in>RealSvd2x2.h</in>
                <in>blas.h</in>
                <in>lapack.h</in>
                <in>lapacke.h</in>
                <in>lapacke_mangling.h</in>
              </df>
              <df name="OrderingMethods">
                <in>Amd.h</in>
                <in>Eigen_Colamd.h</in>
                <in>Ordering.h</in>
              </df>
              <df name="PardisoSupport">
                <in>PardisoSupport.h</in>
              </df>
              <df name="PaStiXSupport">
                <in>PaStiXSupport.h</in>
              </df>
              <df name="plugins">
                <in>ArrayCwiseBinaryOps.h</in>
                <in>ArrayCwiseUnaryOps.h</in>
                <in>BlockMethods.h</in>
                <in>CommonCwiseBinaryOps.h</in>
                <in>CommonCwiseUnaryOps.h</in>
                <in>MatrixCwiseBinaryOps.h</in>
                <in>MatrixCwiseUnaryOps.h</in>
              </df>
              <df name="QR">
                <in>ColPivHouseholderQR.h</in>
                <in>ColPivHouseholderQR_LAPACKE.h</in>
                <in>CompleteOrthogonalDecomposition.h</in>
                <in>FullPivHouseholderQR.h</in>
                <in>HouseholderQR.h</in>
                <in>HouseholderQR_LAPACKE.h</in>
              </df>
              <df name="SparseCholesky">
                <in>SimplicialCholesky.h</in>
                <in>SimplicialCholesky_impl.h</in>
              </df>
              <df name="SparseCore">
                <in>AmbiVector.h</in>
                <in>CompressedStorage.h</in>
                <in>ConservativeSparseSparseProduct.h</in>
                <in>MappedSparseMatrix.h</in>
                <in>SparseAssign.h</in>
                <in>SparseBlock.h</in>
                <in>SparseColEtree.h</in>
                <in>SparseCompressedBase.h</in>
                <in>SparseCwiseBinaryOp.h</in>
                <in>SparseCwiseUnaryOp.h</in>
                <in>SparseDenseProduct.h</in>
                <in>SparseDiagonalProduct.h</in>
                <in>SparseDot.h</in>
                <in>SparseFuzzy.h</in>
                <in>SparseMap.h</in>
                <in>SparseMatrix.h</in>
                <in>SparseMatrixBase.h</in>
                <in>SparsePermutation.h</in>
                <in>SparseProduct.h</in>
                <in>SparseRedux.h</in>
                <in>SparseRef.h</in>
                <in>SparseSelfAdjointView.h</in>
                <in>SparseSolverBase.h</in>
                <in>SparseSparseProductWithPruning.h</in>
                <in>SparseTranspose.h</in>
                <in>SparseTriangularView.h</in>
                <in>SparseUtil.h</in>
                <in>SparseVector.h</in>
                <in>SparseView.h</in>
                <in>TriangularSolver.h</in>
              </df>
              <df name="SparseLU">
                <in>SparseLU.h</in>
                <in>SparseLUImpl.h</in>
                <in>SparseLU_Memory.h</in>
                <in>SparseLU_Structs.h</in>
                <in>SparseLU_SupernodalMatrix.h</in>
                <in>SparseLU_Utils.h</in>
                <in>SparseLU_column_bmod.h</in>
                <in>SparseLU_column_dfs.h</in>
                <in>SparseLU_copy_to_ucol.h</in>
                <in>SparseLU_gemm_kernel.h</in>
                <in>SparseLU_heap_relax_snode.h</in>
                <in>SparseLU_kernel_bmod.h</in>
                <in>SparseLU_panel_bmod.h</in>
                <in>SparseLU_panel_dfs.h</in>
                <in>SparseLU_pivotL.h</in>
                <in>SparseLU_pruneL.h</in>
                <in>SparseLU_relax_snode.h</in>
              </df>
              <df name="SparseQR">
                <in>SparseQR.h</in>
              </df>
              <df name="SPQRSupport">
                <in>SuiteSparseQRSupport.h</in>
              </df>
              <df name="StlSupport">
                <in>StdDeque.h</in>
                <in>StdList.h</in>
                <in>StdVector.h</in>
                <in>details.h</in>
              </df>
              <df name="SuperLUSupport">
                <in>SuperLUSupport.h</in>
              </df>
              <df name="SVD">
                <in>BDCSVD.h</in>
                <in>JacobiSVD.h</in>
                <in>JacobiSVD_LAPACKE.h</in>
                <in>SVDBase.h</in>
                <in>UpperBidiagonalization.h</in>
              </df>
              <df name="UmfPackSupport">
                <in>UmfPackSupport.h</in>
              </df>
            </df>
            <in>Cholesky</in>
            <in>Core</in>
            <in>Dense</in>
            <in>Eigen</in>
            <in>Eigenvalues</in>
            <in>Geometry</in>
            <in>Householder</in>
            <in>Jacobi</in>
            <in>LU</in>
            <in>QR</in>
            <in>SVD</in>
            <in>StdVector</in>
          </df>
          <df name="unsupported">
            <df name="Eigen">
              <df name="CXX11">
                <df name="src">
                  <df name="Tensor">
                    <in>Tensor.h</in>
                    <in>TensorArgMax.h</in>
                    <in>TensorAssign.h</in>
                    <in>TensorBase.h</in>
                    <in>TensorBroadcasting.h</in>
                    <in>TensorChipping.h</in>
                    <in>TensorConcatenation.h</in>
                    <in>TensorContraction.h</in>
                    <in>TensorContractionBlocking.h</in>
                    <in>TensorContractionCuda.h</in>
                    <in>TensorContractionMapper.h</in>
                    <in>TensorContractionThreadPool.h</in>
                    <in>TensorConversion.h</in>
                    <in>TensorConvolution.h</in>
                    <in>TensorCostModel.h</in>
                    <in>TensorCustomOp.h</in>
                    <in>TensorDevice.h</in>
                    <in>TensorDeviceCuda.h</in>
                    <in>TensorDeviceDefault.h</in>
                    <in>TensorDeviceSycl.h</in>
                    <in>TensorDeviceThreadPool.h</in>
                    <in>TensorDimensionList.h</in>
                    <in>TensorDimensions.h</in>
                    <in>TensorEvalTo.h</in>
                    <in>TensorEvaluator.h</in>
                    <in>TensorExecutor.h</in>
                    <in>TensorExpr.h</in>
                    <in>TensorFFT.h</in>
                    <in>TensorFixedSize.h</in>
                    <in>TensorForcedEval.h</in>
                    <in>TensorForwardDeclarations.h</in>
                    <in>TensorFunctors.h</in>
                    <in>TensorGenerator.h</in>
                    <in>TensorGlobalFunctions.h</in>
                    <in>TensorIO.h</in>
                    <in>TensorImagePatch.h</in>
                    <in>TensorIndexList.h</in>
                    <in>TensorInflation.h</in>
                    <in>TensorInitializer.h</in>
                    <in>TensorIntDiv.h</in>
                    <in>TensorLayoutSwap.h</in>
                    <in>TensorMacros.h</in>
                    <in>TensorMap.h</in>
                    <in>TensorMeta.h</in>
                    <in>TensorMorphing.h</in>
                    <in>TensorPadding.h</in>
                    <in>TensorPatch.h</in>
                    <in>TensorRandom.h</in>
                    <in>TensorReduction.h</in>
                    <in>TensorReductionCuda.h</in>
                    <in>TensorReductionSycl.h</in>
                    <in>TensorRef.h</in>
                    <in>TensorReverse.h</in>
                    <in>TensorScan.h</in>
                    <in>TensorShuffling.h</in>
                    <in>TensorStorage.h</in>
                    <in>TensorStriding.h</in>
                    <in>TensorSycl.h</in>
                    <in>TensorSyclConvertToDeviceExpression.h</in>
                    <in>TensorSyclExprConstructor.h</in>
                    <in>TensorSyclExtractAccessor.h</in>
                    <in>TensorSyclExtractFunctors.h</in>
                    <in>TensorSyclLeafCount.h</in>
                    <in>TensorSyclPlaceHolderExpr.h</in>
                    <in>TensorSyclRun.h</in>
                    <in>TensorSyclTuple.h</in>
                    <in>TensorTraits.h</in>
                    <in>TensorUInt128.h</in>
                    <in>TensorVolumePatch.h</in>
                  </df>
                  <df name="TensorSymmetry">
                    <df name="util">
                      <in>TemplateGroupTheory.h</in>
                    </df>
                    <in>DynamicSymmetry.h</in>
                    <in>StaticSymmetry.h</in>
                    <in>Symmetry.h</in>
                  </df>
                  <df name="ThreadPool">
                    <in>EventCount.h</in>
                    <in>NonBlockingThreadPool.h</in>
                    <in>RunQueue.h</in>
                    <in>SimpleThreadPool.h</in>
                    <in>ThreadEnvironment.h</in>
                    <in>ThreadLocal.h</in>
                    <in>ThreadPoolInterface.h</in>
                    <in>ThreadYield.h</in>
                  </df>
                  <df name="util">
                    <in>CXX11Meta.h</in>
                    <in>CXX11Workarounds.h</in>
                    <in>EmulateArray.h</in>
                    <in>EmulateCXX11Meta.h</in>
                    <in>MaxSizeVector.h</in>
                  </df>
                </df>
              </df>
              <df name="src">
                <df name="AutoDiff">
                  <in>AutoDiffJacobian.h</in>
                  <in>AutoDiffScalar.h</in>
                  <in>AutoDiffVector.h</in>
                </df>
                <df name="BVH">
                  <in>BVAlgorithms.h</in>
                  <in>KdBVH.h</in>
                </df>
                <df name="Eigenvalues">
                  <in>ArpackSelfAdjointEigenSolver.h</in>
                </df>
                <df name="EulerAngles">
                  <in>EulerAngles.h</in>
                  <in>EulerSystem.h</in>
                </df>
                <df name="FFT">
                  <in>ei_fftw_impl.h</in>
                  <in>ei_kissfft_impl.h</in>
                </df>
                <df name="IterativeSolvers">
                  <in>ConstrainedConjGrad.h</in>
                  <in>DGMRES.h</in>
                  <in>GMRES.h</in>
                  <in>IncompleteLU.h</in>
                  <in>IterationController.h</in>
                  <in>MINRES.h</in>
                  <in>Scaling.h</in>
                </df>
                <df name="KroneckerProduct">
                  <in>KroneckerTensorProduct.h</in>
                </df>
                <df name="LevenbergMarquardt">
                  <in>LMcovar.h</in>
                  <in>LMonestep.h</in>
                  <in>LMpar.h</in>
                  <in>LMqrsolv.h</in>
                  <in>LevenbergMarquardt.h</in>
                </df>
                <df name="MatrixFunctions">
                  <in>MatrixExponential.h</in>
                  <in>MatrixFunction.h</in>
                  <in>MatrixLogarithm.h</in>
                  <in>MatrixPower.h</in>
                  <in>MatrixSquareRoot.h</in>
                  <in>StemFunction.h</in>
                </df>
                <df name="MoreVectorization">
                  <in>MathFunctions.h</in>
                </df>
                <df name="NonLinearOptimization">
                  <in>HybridNonLinearSolver.h</in>
                  <in>LevenbergMarquardt.h</in>
                  <in>chkder.h</in>
                  <in>covar.h</in>
                  <in>dogleg.h</in>
                  <in>fdjac1.h</in>
                  <in>lmpar.h</in>
                  <in>qrsolv.h</in>
                  <in>r1mpyq.h</in>
                  <in>r1updt.h</in>
                  <in>rwupdt.h</in>
                </df>
                <df name="NumericalDiff">
                  <in>NumericalDiff.h</in>
                </df>
                <df name="Polynomials">
                  <in>Companion.h</in>
                  <in>PolynomialSolver.h</in>
                  <in>PolynomialUtils.h</in>
                </df>
                <df name="Skyline">
                  <in>SkylineInplaceLU.h</in>
                  <in>SkylineMatrix.h</in>
                  <in>SkylineMatrixBase.h</in>
                  <in>SkylineProduct.h</in>
                  <in>SkylineStorage.h</in>
                  <in>SkylineUtil.h</in>
                </df>
                <df name="SparseExtra">
                  <in>BlockOfDynamicSparseMatrix.h</in>
                  <in>BlockSparseMatrix.h</in>
                  <in>DynamicSparseMatrix.h</in>
                  <in>MarketIO.h</in>
                  <in>MatrixMarketIterator.h</in>
                  <in>RandomSetter.h</in>
                </df>
                <df name="SpecialFunctions">
                  <df name="arch">
                    <df name="CUDA">
                      <in>CudaSpecialFunctions.h</in>
                    </df>
                  </df>
                  <in>SpecialFunctionsArrayAPI.h</in>
                  <in>SpecialFunctionsFunctors.h</in>
                  <in>SpecialFunctionsHalf.h</in>
                  <in>SpecialFunctionsImpl.h</in>
                  <in>SpecialFunctionsPacketMath.h</in>
                </df>
                <df name="Splines">
                  <in>Spline.h</in>
                  <in>SplineFitting.h</in>
                  <in>SplineFwd.h</in>
                </df>
              </df>
              <in>NonLinearOptimization</in>
              <in>NumericalDiff</in>
              <in>Polynomials</in>
            </df>
          </df>
        </df>
        <df name="OpenEXR">
          <in>Iex.h</in>
          <in>IexBaseExc.h</in>
          <in>IexErrnoExc.h</in>
          <in>IexExport.h</in>
          <in>IexForward.h</in>
          <in>IexMacros.h</in>
          <in>IexMathExc.h</in>
          <in>IexMathFloatExc.h</in>
          <in>IexMathFpu.h</in>
          <in>IexMathIeeeExc.h</in>
          <in>IexNamespace.h</in>
          <in>IexThrowErrnoExc.h</in>
          <in>IlmBaseConfig.h</in>
          <in>IlmThread.h</in>
          <in>IlmThreadExport.h</in>
          <in>IlmThreadForward.h</in>
          <in>IlmThreadMutex.h</in>
          <in>IlmThreadNamespace.h</in>
          <in>IlmThreadPool.h</in>
          <in>IlmThreadSemaphore.h</in>
          <in>ImathBox.h</in>
          <in>ImathBoxAlgo.h</in>
          <in>ImathColor.h</in>
          <in>ImathColorAlgo.h</in>
          <in>ImathEuler.h</in>
          <in>ImathExc.h</in>
          <in>ImathExport.h</in>
          <in>ImathForward.h</in>
          <in>ImathFrame.h</in>
          <in>ImathFrustum.h</in>
          <in>ImathFrustumTest.h</in>
          <in>ImathFun.h</in>
          <in>ImathGL.h</in>
          <in>ImathGLU.h</in>
          <in>ImathHalfLimits.h</in>
          <in>ImathInt64.h</in>
          <in>ImathInterval.h</in>
          <in>ImathLimits.h</in>
          <in>ImathLine.h</in>
          <in>ImathLineAlgo.h</in>
          <in>ImathMath.h</in>
          <in>ImathMatrix.h</in>
          <in>ImathMatrixAlgo.h</in>
          <in>ImathNamespace.h</in>
          <in>ImathPlane.h</in>
          <in>ImathPlatform.h</in>
          <in>ImathQuat.h</in>
          <in>ImathRandom.h</in>
          <in>ImathRoots.h</in>
          <in>ImathShear.h</in>
          <in>ImathSphere.h</in>
          <in>ImathVec.h</in>
          <in>ImathVecAlgo.h</in>
          <in>ImfAcesFile.h</in>
          <in>ImfArray.h</in>
          <in>ImfAttribute.h</in>
          <in>ImfB44Compressor.h</in>
          <in>ImfBoxAttribute.h</in>
          <in>ImfCRgbaFile.h</in>
          <in>ImfChannelList.h</in>
          <in>ImfChannelListAttribute.h</in>
          <in>ImfChromaticities.h</in>
          <in>ImfChromaticitiesAttribute.h</in>
          <in>ImfCompositeDeepScanLine.h</in>
          <in>ImfCompression.h</in>
          <in>ImfCompressionAttribute.h</in>
          <in>ImfConvert.h</in>
          <in>ImfDeepCompositing.h</in>
          <in>ImfDeepFrameBuffer.h</in>
          <in>ImfDeepImageState.h</in>
          <in>ImfDeepImageStateAttribute.h</in>
          <in>ImfDeepScanLineInputFile.h</in>
          <in>ImfDeepScanLineInputPart.h</in>
          <in>ImfDeepScanLineOutputFile.h</in>
          <in>ImfDeepScanLineOutputPart.h</in>
          <in>ImfDeepTiledInputFile.h</in>
          <in>ImfDeepTiledInputPart.h</in>
          <in>ImfDeepTiledOutputFile.h</in>
          <in>ImfDeepTiledOutputPart.h</in>
          <in>ImfDoubleAttribute.h</in>
          <in>ImfEnvmap.h</in>
          <in>ImfEnvmapAttribute.h</in>
          <in>ImfExport.h</in>
          <in>ImfFloatAttribute.h</in>
          <in>ImfForward.h</in>
          <in>ImfFrameBuffer.h</in>
          <in>ImfFramesPerSecond.h</in>
          <in>ImfGenericInputFile.h</in>
          <in>ImfGenericOutputFile.h</in>
          <in>ImfHeader.h</in>
          <in>ImfHuf.h</in>
          <in>ImfIO.h</in>
          <in>ImfInputFile.h</in>
          <in>ImfInputPart.h</in>
          <in>ImfInt64.h</in>
          <in>ImfIntAttribute.h</in>
          <in>ImfKeyCode.h</in>
          <in>ImfKeyCodeAttribute.h</in>
          <in>ImfLineOrder.h</in>
          <in>ImfLineOrderAttribute.h</in>
          <in>ImfLut.h</in>
          <in>ImfMatrixAttribute.h</in>
          <in>ImfMisc.h</in>
          <in>ImfMultiPartInputFile.h</in>
          <in>ImfMultiPartOutputFile.h</in>
          <in>ImfMultiView.h</in>
          <in>ImfName.h</in>
          <in>ImfNamespace.h</in>
          <in>ImfOpaqueAttribute.h</in>
          <in>ImfOutputFile.h</in>
          <in>ImfOutputPart.h</in>
          <in>ImfPartHelper.h</in>
          <in>ImfPartType.h</in>
          <in>ImfPixelType.h</in>
          <in>ImfPreviewImage.h</in>
          <in>ImfPreviewImageAttribute.h</in>
          <in>ImfRational.h</in>
          <in>ImfRationalAttribute.h</in>
          <in>ImfRgba.h</in>
          <in>ImfRgbaFile.h</in>
          <in>ImfRgbaYca.h</in>
          <in>ImfStandardAttributes.h</in>
          <in>ImfStringAttribute.h</in>
          <in>ImfStringVectorAttribute.h</in>
          <in>ImfTestFile.h</in>
          <in>ImfThreading.h</in>
          <in>ImfTileDescription.h</in>
          <in>ImfTileDescriptionAttribute.h</in>
          <in>ImfTiledInputFile.h</in>
          <in>ImfTiledInputPart.h</in>
          <in>ImfTiledOutputFile.h</in>
          <in>ImfTiledOutputPart.h</in>
          <in>ImfTiledRgbaFile.h</in>
          <in>ImfTimeCode.h</in>
          <in>ImfTimeCodeAttribute.h</in>
          <in>ImfVecAttribute.h</in>
          <in>ImfVersion.h</in>
          <in>ImfWav.h</in>
          <in>ImfXdr.h</in>
          <in>OpenEXRConfig.h</in>
          <in>half.h</in>
          <in>halfExport.h</in>
          <in>halfFunction.h</in>
          <in>halfLimits.h</in>
        </df>
      </df>
      <df name="lib">
      </df>
      <df name="linux">
        <df name="bin">
        </df>
      </df>
      <df name="osx">
        <df name="bin">
        </df>
      </df>
      <df name="python">
      </df>
      <df name="share">
        <df name="eigen3">
          <df name="cmake">
          </df>
        </df>
        <df name="pkgconfig">
        </df>
      </df>
      <df name="src">
        <in>main.cpp</in>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
